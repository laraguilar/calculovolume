name: Run Python Tests and Publish to SonarCloud

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configurar Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  # Ajuste conforme necessário

      # Instalar dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      # Executar os testes e gerar relatório de cobertura
      - name: Run pytest
        run: pytest --cov=volume_cilindro --cov-report=xml

      # Armazenar o relatório de cobertura como artefato
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  sonarcloud:
    name: Publish to SonarCloud
    runs-on: ubuntu-latest
    needs: test  # Dependência do job de testes

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .  # Diretório do projeto
          args: >
            -Dsonar.organization=laraguilar
            -Dsonar.projectKey=laraguilar_calculovolume
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=.
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/test_*.py
